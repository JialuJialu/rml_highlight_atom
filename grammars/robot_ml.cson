'scopeName': 'source.rml' # <scope> should be a short, unique indicator for the language ("js", "php", "c", etc.)
'name': 'RML' # The title that will show up in grammar selection and on your status bar.
'fileTypes': [ # An array of file extensions.
  'rml'
  'rmx'
]
'patterns':[
    {
        'match': '\\b(let|rec|if|then|else|fun|with|include|in|to)\\b'
        'name': 'keyword.control.rml'
    }
    {
        'match': '\\b(true|false|SELF)\\b'
        'name': 'constant.language.rml'
    }
    {
        'match': '\\b(begin|end|match)\\b'
        'name': 'entity.name.function strong emphasis'
    }
    {
        'match': '\\b((-)?[0-9.]+)\\b'
        'name': 'constant.numeric.rml'
    }
    {
        'match': '\\b(ref)\\b'
        'name': 'keyword.other.storage.modifier.rml'
    }
    {
        'match': '\\b(fun)\\s+(\\w+)\\b'
        'captures':
            '1':
                'name': 'keyword.control.rml'
            '2':
                'name': 'entity.name.function.rml'
        'name': 'meta.function.rml'
    }
    {
        'begin': '\"'
        'beginCaptures':
          '0':
            'name': 'string.quoted.double.rml'
        'end': '\"'
        'endCaptures':
          '0':
            'name': 'string.quoted.double.rml'
        'name': 'constant.character.escape.rml'
    }
    {
        'begin': '\\/\\/'
        'end': '$'
        'name': 'comment constant.regexp meta.separator.markdown'
    }
    {
        'begin': '\\/\\*(?!\\*[^\\)])'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.rml'
        'end': '\\*\\/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.rml'
        'name': 'comment constant.regexp meta.separator.markdown'
    }
    {
        'begin': '\\/\\*\\*'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.rml'
        'end': '\\*\\/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.rml'
        'name': 'comment constant.regexp meta.separator.markdown'
    }
]
